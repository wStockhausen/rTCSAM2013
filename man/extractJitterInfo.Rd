% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extractJitterInfo.R
\name{extractJitterInfo}
\alias{extractJitterInfo}
\title{Function to extract results from a set of previous jittered TCSAM2013 runs}
\usage{
extractJitterInfo(os = "osx", path = ".", model = "tcsam2013alta",
  path2model = "", configFile = "", minPhase = NULL, maxPhase = NULL,
  numRuns = 3, onlyEvalJitter = FALSE, in.csv = "jitterInfo.csv",
  out.csv = "jitterResults.csv", plotResults = FALSE, cleanup = TRUE)
}
\arguments{
\item{os}{- 'win' or 'mac' or 'osx'}

\item{path}{- path for model output}

\item{model}{- TCSAM2013 model executable name}

\item{path2model}{- path to model executable}

\item{configFile}{- path to model configuration file}

\item{minPhase}{- min phase to start estimation}

\item{maxPhase}{- max phase for estimation}

\item{numRuns}{- number of jitter runs to make}

\item{in.csv}{- filename for jitter info (seed, obj fun value) from ADMB model run}

\item{out.csv}{- filename for jittered results}

\item{plotResults}{- T/F to plot final results using \code{plotTCSAM2013I}}

\item{cleanup}{- flag (T/F) to clean up unnecessary files}
}
\value{
- list w/ 4 elements:
 imn  - index of (1st) smallest value for the objective function
 seed - seed resulting in the smallest objective function
 par  - dataframe with par results from run w/ smallest objective function
 objFuns - table of objective function values, max gradients, and seed values from all model runs
 parList - list of par dataframes for each model run
}
\description{
This function extracts results from a set of previous jittered TCSAM2013 runs
and re-runs the best run to create sd info.
}
\details{
For each model run, this function reads a set of jittered model runs and 
determines the seed associated with the 1st model run that yielded
the smallest value for the objective function and max gradient. It re-runs the model using this seed
to re-create the model run resulting in the minimum objectve function to recreate
the model output files. The best model run is done estimating the hessian, so
standard deviations for estimated model parameters are available in the .std file.

Uses \code{wtsUtilities::formatZeros()}.
}

